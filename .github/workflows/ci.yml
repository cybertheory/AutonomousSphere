name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Start services
      run: docker-compose up -d
    
    - name: Wait for services to be ready
      run: |
        echo "Waiting for services to be ready..."
        sleep 30
    
    - name: Create test database
      run: |
        docker-compose exec -T db psql -U postgres -c "DROP DATABASE IF EXISTS test_autonomoussphere;"
        docker-compose exec -T db psql -U postgres -c "CREATE DATABASE test_autonomoussphere;"
    
    - name: Run tests
      run: docker-compose -f docker-compose.yml -f docker-compose.test.yml up --build --exit-code-from test test
    
    - name: Clean up
      run: docker-compose down
      if: always()

  build:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    
    - name: Build and push API image
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: yourusername/autonomoussphere-api:latest
    
    - name: Build and push Registry image
      uses: docker/build-push-action@v4
      with:
        context: ./registry_service
        push: true
        tags: yourusername/autonomoussphere-registry:latest
    
    - name: Build and push Example Agent image
      uses: docker/build-push-action@v4
      with:
        context: ./example_agent
        push: true
        tags: yourusername/autonomoussphere-example-agent:latest